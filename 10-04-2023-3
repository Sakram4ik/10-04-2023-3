
#include <iostream>
#include <string>

using namespace std;

class Square{
public:
	Square(double side);
	void set_side(double side);
	double get_side();
	double get_area();
	void print();
private:
	double side;
	double area;
};
Square::Square(double side){
	if (side >= 0){
		this->side = side;
		this->area = side * side;
	}
	else{
		this->side = 0;
		this->area = 0;
	}
}
void Square::set_side(double side){
	if (side >= 0){
		this->side = side;
		this->area = side * side;
	}
}
void Square::print(){
	cout << "Square: side = " << this->side << " area = " << this->area << endl;
}

class AdHocSquare{
public:
	AdHocSquare(double side);
	void set_side(double side);
	double get_area();
private:
	double side;
};
class LazySquare{
public:
	LazySquare(double side);
	void set_side(double side);
	double get_area();
private:
	double side;
	double area;
	bool side_changed;
};
AdHocSquare::AdHocSquare(double side){
	if (side >= 0)
		this->side = side;
	else
		this->side = 0;
}
void AdHocSquare::set_side(double side){
	if (side >= 0){
		this->side = side;
	}
}
double AdHocSquare::get_area(){
	return this->side * this->side;
}
LazySquare::LazySquare(double side){
	if (side >= 0){
		this->side = side;
		this->area = side * side;
	}
	else{
		this->side = 0;
		this->area = 0;
	}
}
void LazySquare::set_side(double side){
	if (side >= 0){
		this->side = side;
		this->side_changed = true;
	}
}
double LazySquare::get_area(){
	if (this->side_changed){
		return side * side;
	}
	else{
		return this->area;
	}
}


int main()
{
 Square s(4);
    s.print();
    s.set_side(2.0);
    s.print();
    s.set_side(-33.0);
    s.print();

    AdHocSquare adHocSquare(5);
    double adHocArea = adHocSquare.get_area();
    cout << "AdHocSquare area: " << adHocArea << endl;

    LazySquare lazySquare(6);
    double lazyArea = lazySquare.get_area();
    cout << "LazySquare area: " << lazyArea << endl;

    lazySquare.set_side(7);
    double lazyUpdatedArea = lazySquare.get_area();
    cout << "Updated LazySquare area: " << lazyUpdatedArea << endl;

    return 0;
}
